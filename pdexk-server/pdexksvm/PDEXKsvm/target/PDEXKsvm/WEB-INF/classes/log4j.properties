# Default to info level output; this is very handy if you eventually use Hibernate as well.
log4j.rootCategory=info, A1

# A1 is set to be a ConsoleAppender.
log4j.appender.A1=org.apache.log4j.ConsoleAppender

log4j.logger.jobSubmitter=error, jobSubmitterTf
### direct messages to file jobSubmitter_err.log ###
log4j.appender.jobSubmitterTf=org.apache.log4j.FileAppender
log4j.appender.jobSubmitterTf.File=logs/pdexk_SVM_logs/jobSubmitter_err.log
log4j.appender.jobSubmitterTf.layout=org.apache.log4j.PatternLayout
log4j.appender.jobSubmitterTf.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n

log4j.logger.periodicalGarbageCollector=error, periodicalGarbageCollectorTf
### direct messages to file jobSubmitter_err.log ###
log4j.appender.periodicalGarbageCollectorTf=org.apache.log4j.FileAppender
log4j.appender.periodicalGarbageCollectorTf.File=logs/pdexk_SVM_logs/periodicalGarbageCollector_err.log
log4j.appender.periodicalGarbageCollectorTf.layout=org.apache.log4j.PatternLayout
log4j.appender.periodicalGarbageCollectorTf.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n

log4j.logger.periodicalWorker=error, periodicalWorkerTf
### direct messages to file jobSubmitter_err.log ###
log4j.appender.periodicalWorkerTf=org.apache.log4j.FileAppender
log4j.appender.periodicalWorkerTf.File=logs/pdexk_SVM_logs/periodicalWorker_err.log
log4j.appender.periodicalWorkerTf.layout=org.apache.log4j.PatternLayout
log4j.appender.periodicalWorkerTf.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n


log4j.logger.publicKeyAuthentication=error, publicKeyAuthenticationTf
### direct messages to file jobSubmitter_err.log ###
log4j.appender.publicKeyAuthenticationTf=org.apache.log4j.FileAppender
log4j.appender.publicKeyAuthenticationTf.File=logs/pdexk_SVM_logs/publicKeyAuthentication_err.log
log4j.appender.publicKeyAuthenticationTf.layout=org.apache.log4j.PatternLayout
log4j.appender.publicKeyAuthenticationTf.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n


# A1 uses PatternLayout.
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1.layout.ConversionPattern=[%p] %c{2} %m%n

# Service category names are the name of the defining module class
# and then the service id.
log4j.category.PDEXKsvm.services.AppModule.TimingFilter=info

# Outputs a list of pages, components and mixins at startup.
log4j.category.org.apache.tapestry5.services.TapestryModule.ComponentClassResolver=info

# Outputs startup statistics; elapsed time to setup and initialize the registry, and a list of
# available services.
log4j.category.org.apache.tapestry5.TapestryFilter=info


# Turning on debug mode for a page's or component's transformer logger
# will show all of the code changes that occur when the
# class is loaded.

# log4j.category.tapestry.transformer.PDEXKsvm.pages.Index=debug

# Turning on debug mode for a component's events logger will show all the events triggered on the
# component, and which component methods are invoked as a result.

# log4j.category.tapestry.events.PDEXKsvm.pages.Index=debug

# Turning on trace mode for a page's render logger provides extended information about every step
# in rendering (this is not generally helpful).  Turning on debug mode will add a one-line
# summary that includes the elapsed render time, which can be useful in tracking down
# performance issues.

# log4j.category.tapestry.render.PDEXKsvm.pages.Index=debug

# Turn on some verbose debugging about everything in the application. This is nice initially,
# while getting everything set up.  You'll probably want to remove this once you are 
# up and running, replacing it with more selective debugging output.
log4j.category.PDEXKsvm=debug