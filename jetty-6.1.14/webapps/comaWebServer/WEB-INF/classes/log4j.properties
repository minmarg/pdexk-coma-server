# Default to info level output; this is very handy if you eventually use Hibernate as well.
log4j.rootCategory=info, A1
# A1 is set to be a ConsoleAppender.
log4j.appender.A1=org.apache.log4j.ConsoleAppender

log4j.logger.sshService=info, sshServiceTf
log4j.logger.index=error, index_errTf
log4j.logger.modellerJob=error, modellerJob_errTf
log4j.logger.jobSubmitter=error, jobSubmitterTf
log4j.logger.periodicalGarbageCollector=error, periodicalGarbageCollectorTf
log4j.logger.periodicalWorker=error, periodicalWorker_errTf
log4j.logger.periodicalDatabaseUpdater=error, periodicalDatabaseUpdaterTf

# A1 uses PatternLayout.
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1.layout.ConversionPattern=[%p] %c{2} %m%n

### direct messages to file sshService.log ###
log4j.appender.sshServiceTf=org.apache.log4j.FileAppender
log4j.appender.sshServiceTf.File=logs/COMA_logs/sshService.log
log4j.appender.sshServiceTf.layout=org.apache.log4j.PatternLayout
log4j.appender.sshServiceTf.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n

### direct messages to file index_err.log ###
log4j.appender.index_errTf=org.apache.log4j.FileAppender
log4j.appender.index_errTf.File=logs/COMA_logs/index_err.log
log4j.appender.index_errTf.layout=org.apache.log4j.PatternLayout
log4j.appender.index_errTf.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n

### direct messages to file modellerJob_err.log ###
log4j.appender.modellerJob_errTf=org.apache.log4j.FileAppender
log4j.appender.modellerJob_errTf.File=logs/COMA_logs/modellerJob_err.log
log4j.appender.modellerJob_errTf.layout=org.apache.log4j.PatternLayout
log4j.appender.modellerJob_errTf.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n

### direct messages to file jobSubmitter_err.log ###
log4j.appender.jobSubmitterTf=org.apache.log4j.FileAppender
log4j.appender.jobSubmitterTf.File=logs/COMA_logs/jobSubmitter_err.log
log4j.appender.jobSubmitterTf.layout=org.apache.log4j.PatternLayout
log4j.appender.jobSubmitterTf.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n

### direct messages to file periodicalGarbageCollector_err.log ###
log4j.appender.periodicalGarbageCollectorTf=org.apache.log4j.FileAppender
log4j.appender.periodicalGarbageCollectorTf.File=logs/COMA_logs/periodicalGarbageCollector_err.log
log4j.appender.periodicalGarbageCollectorTf.layout=org.apache.log4j.PatternLayout
log4j.appender.periodicalGarbageCollectorTf.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n

### direct messages to file periodicalWorker_err.log ###
log4j.appender.periodicalWorker_errTf=org.apache.log4j.FileAppender
log4j.appender.periodicalWorker_errTf.File=logs/COMA_logs/periodicalWorker_err.log
log4j.appender.periodicalWorker_errTf.layout=org.apache.log4j.PatternLayout
log4j.appender.periodicalWorker_errTf.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n

### direct messages to file periodicalDatabaseUpdater_err.log ###
log4j.appender.periodicalDatabaseUpdaterTf=org.apache.log4j.FileAppender
log4j.appender.periodicalDatabaseUpdaterTf.File=logs/COMA_logs/periodicalDatabaseUpdater_err.log
log4j.appender.periodicalDatabaseUpdaterTf.layout=org.apache.log4j.PatternLayout
log4j.appender.periodicalDatabaseUpdaterTf.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n

# Service category names are the name of the defining module class
# and then the service id.
# log4j.category.bioinfo.comaWebServer.services.AppModule.TimingFilter=info

# Outputs a list of pages, components and mixins at startup.
# log4j.category.org.apache.tapestry5.services.TapestryModule.ComponentClassResolver=info

# Outputs startup statistics; elapsed time to setup and initialize the registry, and a list of
# available services.
# log4j.category.org.apache.tapestry5.TapestryFilter=info


# Turning on debug mode for a page's or component's transformer logger
# will show all of the code changes that occur when the
# class is loaded.

# log4j.category.tapestry.transformer.bioinfo.comaWebServer.pages.Index=debug

# Turning on debug mode for a component's events logger will show all the events triggered on the
# component, and which component methods are invoked as a result.

# log4j.category.tapestry.events.bioinfo.comaWebServer.pages.Index=debug

# Turning on trace mode for a page's render provides extended information about every step
# in rendering (this is not generally helpful).  Turning on debug mode will add a one-line
# summary that includes the elapsed render time.

# log4j.category.tapestry.render.bioinfo.comaWebServer.pages.Index=debug

# Turn on some verbose debugging about everything in the application. This is nice initially,
# while getting everything set up.  You'll probably want to remove this once you are 
# up and running, replacing it with more selecting debugging output.
# log4j.category.bioinfo.comaWebServer=info

### set log levels - for more verbose logging change 'info' to 'debug' ###

#log4j.logger.org.hibernate=info
#log4j.logger.org.hibernate=debug

### log HQL query parser activity
#log4j.logger.org.hibernate.hql.ast.AST=debug

### log just the SQL
#log4j.logger.org.hibernate.SQL=info

### log JDBC bind parameters ###
#log4j.logger.org.hibernate.type=info

### log schema export/update ###
#log4j.logger.org.hibernate.tool.hbm2ddl=info

### log HQL parse trees
#log4j.logger.org.hibernate.hql=debug

### log cache activity ###
#log4j.logger.org.hibernate.cache=info

### log transaction activity
#log4j.logger.org.hibernate.transaction=debug

### log JDBC resource acquisition
#log4j.logger.org.hibernate.jdbc=debug

### enable the following line if you want to track down connection ###
### leakages when using DriverManagerConnectionProvider ###
#log4j.logger.org.hibernate.connection.DriverManagerConnectionProvider=trace
